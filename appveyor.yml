version: '{branch}-{build}'
image: Previous Visual Studio 2017
clone_depth: 20
clone_folder: C:\projects\ampcare\desktop
init:
- ps: |
    # If triggered by a new tag use tag name as BUILD_VERSION
    if ($env:APPVEYOR_REPO_TAG -eq "true") {
      Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
    } else {
      Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_BRANCH-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
    }
environment:
  QT_PATH: C:\Qt\$(QT_VER)\$(COMPILER)
  CMAKE_BUILD_TYPE: Release
  VERSION_SUFFIX: alpha
  PROJECT_PATH: C:\projects\ampcare
  PNG2IMG_ROOT_DIR: C:\projects\png2img
  QT_KEYCHAIN_URL: https://codeload.github.com/frankosterfeld/qtkeychain/zip/v0.9.1
  QT_KEYCHAIN_ROOT_DIR: C:\projects\qtkeychain
  QTKEYCHAIN_LIBRARY: C:\projects\qtkeychain\install\lib\qt5keychain.lib
  QTKEYCHAIN_INCLUDE_DIR: C:\projects\qtkeychain\install\include\qt5keychain
  NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.6.0/ninja-win.zip
  NINJA_ROOT_DIR: C:\projects\deps\ninja
  ZLIB_ROOT_DIR: C:\projects\zlib
  matrix:
    - COMPILER: msvc2015
      QT_VER: 5.10
      OPENSSL10_PATH: C:\OpenSSL-Win32
      OPENSSL11_PATH: C:\OpenSSL-v11-Win32
      ZLIB_URL: http://www.samsonov.net/wp?kcccount=http://www.samsonov.net/wp/assets/Dist_zlib/x86-release/zlib.7z
      ARCH: x86
      OPENSSL11_LIBCRYPTO_PATH: C:\OpenSSL-v11-Win32\bin\libcrypto-1_1.dll
    - COMPILER: msvc2017_64
      QT_VER: 5.11
      OPENSSL10_PATH: C:\OpenSSL-Win64
      OPENSSL11_PATH: C:\OpenSSL-v11-Win64
      ZLIB_URL: http://www.samsonov.net/wp?kcccount=http://www.samsonov.net/wp/assets/Dist_zlib/X64-release/zlib.7z
      ARCH: amd64
      OPENSSL11_LIBCRYPTO_PATH: C:\OpenSSL-v11-Win64\bin\libcrypto-1_1-x64.dll
platform:
  - x86
  - x64
matrix:
  exclude:
    - platform: x86
      COMPILER: msvc2017_64
    - platform: x64
      COMPILER: msvc2015
install:
- ps: |
    md C:\downloads | out-null

    # Install png2ico.exe
    #choco install png2ico
    appveyor DownloadFile "https://github.com/hiiamok/png2ImageMagickICO/releases/download/v1.0/x64.zip" -FileName C:\downloads\png2img.zip
    7z x C:\downloads\png2img.zip -o"$env:PNG2IMG_ROOT_DIR" | out-null

    # Download ninja
    appveyor DownloadFile "$env:NINJA_URL" -FileName C:\downloads\ninja.zip
    7z x C:\downloads\ninja.zip -o"$env:NINJA_ROOT_DIR" | out-null

    # Download qtkeychain
    appveyor DownloadFile "$env:QT_KEYCHAIN_URL" -FileName C:\downloads\qtkeychain.zip
    7z x -oC:\projects\qtkeychain C:\downloads\qtkeychain.zip | out-null
    move $env:QT_KEYCHAIN_ROOT_DIR/qtkeychain*/* $env:QT_KEYCHAIN_ROOT_DIR

    # Download zlib
    appveyor DownloadFile "$env:ZLIB_URL" -FileName C:\downloads\zlib.7z
    7z x C:\downloads\zlib.7z -o"$env:ZLIB_ROOT_DIR" | out-null

    # Install NSIS plugins
    appveyor DownloadFile "http://nsis.sourceforge.net/mediawiki/images/8/8f/UAC.zip" -FileName C:\downloads\UAC.zip
    7z x C:\downloads\UAC.zip -oC:\downloads\UAC | out-null
    copy C:\downloads\UAC\Plugins\x86-ansi\UAC.dll "C:\Program Files (x86)\NSIS\Plugins\x86-ansi"
    copy C:\downloads\UAC\Plugins\x86-unicode\UAC.dll "C:\Program Files (x86)\NSIS\Plugins\x86-unicode"
    copy C:\downloads\UAC\UAC.nsh "C:\Program Files (x86)\NSIS\Include"

    appveyor DownloadFile "http://nsis.sourceforge.net/mediawiki/images/1/18/NsProcess.zip" -FileName C:\downloads\NsProcess.7z
    7z e C:\downloads\NsProcess.7z -o"C:\Program Files (x86)\NSIS\Plugins\x86-ansi" nsProcess.dll -r | out-null
    7z e C:\downloads\NsProcess.7z -o"C:\Program Files (x86)\NSIS\Plugins\x86-unicode" nsProcessW.dll -r | out-null
    7z e C:\downloads\NsProcess.7z -o"C:\Program Files (x86)\NSIS\Include" nsProcess.nsh -r | out-null
build_script:
- cmd: |
    REM Setup QT and MSVC compiler
    echo "%QT_PATH%"
    %QT_PATH%\bin\qtenv2.bat
    echo "%VS140COMNTOOLS%"
    "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %ARCH%

    REM Set additional paths
    set PATH=%PATH%;%NINJA_ROOT_DIR%;%PNG2IMG_ROOT_DIR%\x64
    ninja --version
    cmake --version

    REM Build qtkeychain
    mkdir %QT_KEYCHAIN_ROOT_DIR%\build
    mkdir %QT_KEYCHAIN_ROOT_DIR%\install
    cd %QT_KEYCHAIN_ROOT_DIR%\build
    cmake -G"Ninja" .. -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% -DCMAKE_INSTALL_PREFIX="%QT_KEYCHAIN_ROOT_DIR%\install"
    cmake --build . --config Release --target install

    REM Configure AMPcare
    cd %APPVEYOR_BUILD_FOLDER%
    git submodule update --init --recursive
    mkdir %APPVEYOR_BUILD_FOLDER%\build
    mkdir %PROJECT_PATH%\install
    cd %APPVEYOR_BUILD_FOLDER%\build

    cmake -G"Ninja" %APPVEYOR_BUILD_FOLDER% -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% -DCMAKE_INSTALL_PREFIX="%PROJECT_PATH%\install" -DAPPLICATION_UPDATE_URL="https://updates.amp.care/client/" -DOEM_THEME_DIR="%APPVEYOR_BUILD_FOLDER%/theme/amp" -DWITH_CRASHREPORTER=OFF -DNO_SHIBBOLETH=1 -DBUILD_SHELL_INTEGRATION=OFF -DMIRALL_VERSION_SUFFIX="%VERSION_SUFFIX%" -DMIRALL_VERSION_BUILD=%APPVEYOR_BUILD_NUMBER% -DQTKEYCHAIN_LIBRARY=%QTKEYCHAIN_LIBRARY% -DQTKEYCHAIN_INCLUDE_DIR=%QTKEYCHAIN_INCLUDE_DIR% -DOPENSSL_ROOT_DIR=%OPENSSL11_PATH% -DZLIB_INCLUDE_DIR="%ZLIB_ROOT_DIR%/include" -DZLIB_LIBRARY="%ZLIB_ROOT_DIR%/lib/zlib.lib"

    REM Run cmake to compile and install
    cmake --build . --config Release --target install

    REM There must be a better way than this:
    copy "%QT_KEYCHAIN_ROOT_DIR%\install\bin\qt5keychain.dll" "%QT_PATH%\bin"

    REM Run windeployqt to collect all ampcare.exe dependencies
    windeployqt.exe --release "%PROJECT_PATH%\install\bin\ampcare.exe" --dir %PROJECT_PATH%\libs

    REM Get last git tag
    cd %APPVEYOR_BUILD_FOLDER%
    for /f %%i in ('git describe --tag') do set GIT_TAG_NAME=%%i

    REM Download NSIS scripts
    cd %PROJECT_PATH%
    copy "%APPVEYOR_BUILD_FOLDER%\admin\win\nsi\ampcare.nsi" ampcare.nsi
    copy "%APPVEYOR_BUILD_FOLDER%\admin\win\nsi\NSIS.InstallOptions.ini" NSIS.InstallOptions.ini

    REM Run NSIS script to create installer
    makensis.exe /DBUILD_TYPE=Release /DAMP_VERSION_YEAR=%GIT_TAG_NAME:~0,4% /DAMP_VERSION_MONTH=%GIT_TAG_NAME:~5,2% /DAMP_VERSION_REV=%GIT_TAG_NAME:~8,3% /DMIRALL_VERSION_SUFFIX="%VERSION_SUFFIX%" /DGIT_REVISION=%APPVEYOR_REPO_COMMIT:~0,6% ampcare.nsi

    dir install
    move install desktop
artifacts:
- path: install/AMP*.exe
deploy:
- provider: GitHub
  auth_token:
    secure: tRhUEKT0drvqvhtwTfpIRmTYQPdYlI/g7lZZctiY2+1UY0AmM/RGa5bdObXwc4gK
  draft: true
  on:
    APPVEYOR_REPO_TAG: true
